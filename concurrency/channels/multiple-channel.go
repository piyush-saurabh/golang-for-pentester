// Switching between channels

package main

import "fmt"

// Message is the struct for sending message
type Message struct {
	To      []string
	From    string
	Content string
}

// FailedMessage is the struct for failed message
type FailedMessage struct {
	ErrorMessage    string
	OriginalMessage Message
}

func multipleChannel() {

	// Create 2 channels
	msgCh := make(chan Message, 1)
	errCh := make(chan FailedMessage, 1)

	// // Initialize the struct
	// msg := Message{
	// 	To:      []string{"email1@mail,com", "email2@mail.com"},
	// 	From:    "emailto@mail.com",
	// 	Content: "Some content of the email",
	// }

	// failedMessage := FailedMessage{
	// 	ErrorMessage:    "Message sending was failed",
	// 	OriginalMessage: Message{},
	// }

	// msgCh <- msg
	// errCh <- failedMessage

	// Switch between channels using select
	select {
	case receivedMsg := <-msgCh:
		fmt.Println(receivedMsg)
	case receivedErr := <-errCh:
		fmt.Println(receivedErr)
	default:
		// Prevents the deadlock if there is no message in the channel
		fmt.Println("No message available")
	}

	// msgCh <- msg
	// errCh <- failedMessage

	// fmt.Println(<-msgCh)
	// fmt.Println(<-errCh)

}
