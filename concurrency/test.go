package main

import (
	"fmt"
	"runtime"
	"time"
)

// Test method demonstrates the concurrency & parallelism in go
func Test() {
	godur, _ := time.ParseDuration("10ms")

	// Enable parallelism
	runtime.GOMAXPROCS(2)

	go func() {
		for i := 0; i < 100; i++ {
			fmt.Printf("Hello: %d\n", i)
			time.Sleep(godur)
		}
	}()

	go func() {
		for i := 0; i < 100; i++ {
			fmt.Printf("Go: %d\n", i)
			time.Sleep(godur)
		}
	}()

	dur, _ := time.ParseDuration("1s")
	time.Sleep(dur)

	/*
		var wg sync.WaitGroup

		wg.Add(1)
		go func() {
			defer wg.Done()
			for i := 0; i < 100; i++ {
				fmt.Printf("Hello: %d\n", i)
			}

		}()

		wg.Add(1)
		go func() {
			defer wg.Done()
			for i := 0; i < 100; i++ {
				fmt.Printf("Go: %d\n", i)
			}
		}()

		wg.Wait()

	*/
}
