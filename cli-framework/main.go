package main

// Usage
// go run main.go -u http://test.com -w wordlist.txt --workers 2 --proxy http://127.0.0.1:80 --insecure=false

import (
	"fmt"
	"sync"
	"time"

	"github.com/roguesecurity/golang-for-pentester/cli-framework/pkg"
)

func main() {

	// initialize the CLI
	// Get back the config reference
	config := pkg.InitCLI()

	start := time.Now()

	// Create a channel
	workerChannel := make(chan string, pkg.ChannelBufferSize)
	resultChannel := make(chan pkg.ScannerResult)

	var wg sync.WaitGroup

	// Counter to track progress
	wg.Add(1)
	go pkg.ShowProgressBar(resultChannel, config.WordCount, &wg)

	// Create 'n' workers
	for i := 0; i < *config.Workers; i++ {
		go pkg.Worker(workerChannel, resultChannel, config)
	}

	// Master assignes the task to the worker
	// Master will iterate over the full wordlist
	go pkg.Master(workerChannel, config)

	wg.Wait()

	close(workerChannel)
	close(resultChannel)

	end := time.Now()
	elapsed := end.Sub(start)
	fmt.Printf("Total Scan Time: %v\n", elapsed)

}
